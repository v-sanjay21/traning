
1.Simple encoded array ?

import java.io.*; 
import  java.util.*; 
class UserMainCode {    
  public class Result{     
    public final int output1;     
    public final int output2;    
public Result(int out1, int out2){
    output 1=out 1;
    output 2=out 2;
}
}
public Result findOriginalFirstAndSum(int[] input1,int input2){
    int sum=input1[input1.length-1];
for(int i=input1.length-2;i>=0;i--){
    input1[i]=input1[i]-input1[i+1];
    sum+=input1[i];
 }
  Result r=new Result(input1[0],sum);
  return r;
 }
}

2.Decreasing sequence ?

import java.io.*;
import java.util.*;
class UserMainCode
{
  public class Result{
   public final int output1;
   public final int output2;
   public Result(int out1, int out2){
    output1 = out1;
    output2 = out2;
}
}
public Result decreasingSeq(int[] input1,int input2){
  int[] ar=input1.clone();
    Arrays.sort(ar);
    if(Arrays.equals(ar,input1)) return new Result(0,0);
    if(input1.length==1) return new Result(0,0);
  int temp=0,subs=0,max=0,count=0;
 for(int i=0;i<input1.length-1;i++){
   if(input1[i]>input1[i+1]){
    temp=i;
    count=0;
    while(temp<input1.length-1){
     if(input1[temp]>input1[temp+1]){
      temp++;
      count++;
 }
 else {
   subs+=1;
   break;
 }
 }
  i=temp+1;}
  if(temp==input1.length-1) subs+=1;
  if(max<count+1) max=count+1;
 }
   return new Result(subs,max);
 }
}

3.Most frequently occured digits 

import java.io.*;
import java.util.*;
class UserMainCode
{
  public int mostFrequentlyOccurringDigit(int[] input1,int input2){
   int[] ar=new int[10];
   int temp=0,max=0,num=0;
   for(int i=0;i<input1.length;i++){
     temp=input1[i];
     while(temp>0){
      ar[temp%10]+=1;
      temp=temp/10;
}
}
   for(int j=0;j<ar.length;j++){
     if(ar[j]>max){
       max=ar[j];
       num=j;
}
    if(ar[j]==max){
      if(j>num){
         num=j;
         max=ar[j];
}
}
}
return num;
}
}
